// Simple types for the chat layout context
type ChatUser = {
  id: string
  name?: string
}

type ChatConversation = {
  id: string
  title: string
  participants?: Array<{
    id: string
    name: string
    avatar?: string
  }>
}

/**
 * Get the display title for a conversation based on the current user context
 * Priority:
 * 1. Custom name if one was given/exists
 * 2. Name of group participants if more than one (comma separated)
 * 3. Name of participant opposite current user if direct communication
 */
export function getConversationDisplayTitle(conversation: ChatConversation, currentUser: ChatUser): string {
  const title = conversation.title?.trim()
  const participants = conversation.participants || []
  
  // Case 1: If we have a meaningful custom title that's not auto-generated, use it
  if (title && !isAutoGeneratedTitle(title, participants, currentUser)) {
    return title
  }
  
  // Case 2: Group conversation (more than 2 participants) - show comma-separated participant names
  if (participants.length > 2) {
    const otherParticipants = participants.filter(p => p.id !== currentUser.id)
    if (otherParticipants.length > 0) {
      return otherParticipants.map(p => p.name).join(', ')
    }
  }
  
  // Case 3: Direct conversation (exactly 2 participants) - show the other participant's name
  if (participants.length === 2) {
    const otherParticipant = participants.find(p => p.id !== currentUser.id)
    if (otherParticipant?.name) {
      return otherParticipant.name
    }
  }
  
  // Fallback: use the title or a default
  return title || 'Conversation'
}

/**
 * Helper function to determine if a title is auto-generated vs custom
 * Auto-generated titles typically match participant names or common patterns
 */
function isAutoGeneratedTitle(title: string, participants: Array<{id: string, name: string}>, currentUser: ChatUser): boolean {
  if (!title || title.trim() === '') return true
  
  // Check if title matches any participant name
  const participantNames = participants.map(p => p.name)
  if (participantNames.includes(title)) return true
  
  // Check if title is a combination of participant names (common auto-generation pattern)
  const otherParticipants = participants.filter(p => p.id !== currentUser.id)
  const otherNames = otherParticipants.map(p => p.name)
  
  // Check for "Name1, Name2" or "Name1 & Name2" patterns
  const joinedNames = otherNames.join(', ')
  const ampersandNames = otherNames.join(' & ')
  
  if (title === joinedNames || title === ampersandNames) return true
  
  // Check for "Name1 and Name2" pattern
  const andNames = otherNames.join(' and ')
  if (title === andNames) return true
  
  return false
}

/**
 * Get a shortened display title for use in compact spaces (like notifications)
 */
export function getConversationShortTitle(conversation: ChatConversation, currentUser: ChatUser, maxLength: number = 30): string {
  const fullTitle = getConversationDisplayTitle(conversation, currentUser)
  
  if (fullTitle.length <= maxLength) {
    return fullTitle
  }
  
  return fullTitle.substring(0, maxLength - 3) + '...'
}
