kind: pipeline
type: docker
name: baseline

environment:
  DOCKER_BUILDKIT: 1

steps:
  # Parallel test and build steps for faster CI/CD
  - name: test-api
    image: oven/bun:1
    commands:
      - cd api
      - bun install
      - bun test
    failure: ignore
    when:
      event:
        - push
        - pull_request

  - name: test-ui
    image: node:20-alpine
    commands:
      - cd ui
      - npm ci
      - npm run lint
      - npm run type-check
      - npm run test:coverage
    failure: ignore
    when:
      event:
        - push
        - pull_request

  - name: build-api
    image: docker:20.10.16-cli
    volumes:
      - name: docker-sock
        path: /var/run/docker.sock
    commands:
      - cd api
      - docker build -t registry.aqueous.network/baseline-api:${DRONE_COMMIT_SHA:0:8} -t registry.aqueous.network/baseline-api:${DRONE_BRANCH} -t registry.aqueous.network/baseline-api:latest --target production .
      - docker push registry.aqueous.network/baseline-api:${DRONE_COMMIT_SHA:0:8}
      - docker push registry.aqueous.network/baseline-api:${DRONE_BRANCH}
      - docker push registry.aqueous.network/baseline-api:latest
    when:
      event:
        - push
      branch:
        - main
        - develop

  - name: build-ui
    image: docker:20.10.16-cli
    volumes:
      - name: docker-sock
        path: /var/run/docker.sock
    commands:
      - cd ui
      - docker build -t registry.aqueous.network/baseline-ui:${DRONE_COMMIT_SHA:0:8} -t registry.aqueous.network/baseline-ui:${DRONE_BRANCH} -t registry.aqueous.network/baseline-ui:latest --target production .
      - docker push registry.aqueous.network/baseline-ui:${DRONE_COMMIT_SHA:0:8}
      - docker push registry.aqueous.network/baseline-ui:${DRONE_BRANCH}
      - docker push registry.aqueous.network/baseline-ui:latest
    when:
      event:
        - push
      branch:
        - main
        - develop

  - name: deploy-staging
    image: curlimages/curl
    depends_on:
      - build-api
      - build-ui
    commands:
      - |
        curl -X POST "${PORTAINER_URL}/api/stacks/${PORTAINER_STACK_ID_STAGING}/git/redeploy" \
          -H "X-API-Key: ${PORTAINER_API_KEY}" \
          -H "Content-Type: application/json" \
          -d '{
            "repositoryReferenceName": "refs/heads/develop",
            "repositoryAuthentication": false
          }'
    when:
      event:
        - push
      branch:
        - develop

  - name: deploy-production
    image: curlimages/curl
    depends_on:
      - build-api
      - build-ui
    commands:
      - |
        curl -X POST "${PORTAINER_URL}/api/stacks/${PORTAINER_STACK_ID_PRODUCTION}/git/redeploy" \
          -H "X-API-Key: ${PORTAINER_API_KEY}" \
          -H "Content-Type: application/json" \
          -d '{
            "repositoryReferenceName": "refs/heads/main",
            "repositoryAuthentication": false
          }'
    when:
      event:
        - push
      branch:
        - main

  - name: notify-success
    image: plugins/slack
    settings:
      webhook:
        from_secret: slack_webhook
      channel: deployments
      username: drone
      template: |
        ‚úÖ *{{repo.name}}* deployment successful
        üì¶ Branch: `{{build.branch}}`
        üè∑Ô∏è Tag: `{{build.tag}}`
        üë§ Author: {{build.author}}
        üîó <{{build.link}}|View Build>
    when:
      status:
        - success
      event:
        - push
      branch:
        - main
        - develop

  - name: notify-failure
    image: plugins/slack
    settings:
      webhook:
        from_secret: slack_webhook
      channel: deployments
      username: drone
      template: |
        ‚ùå *{{repo.name}}* deployment failed
        üì¶ Branch: `{{build.branch}}`
        üë§ Author: {{build.author}}
        üîó <{{build.link}}|View Build>
    when:
      status:
        - failure

services:
  - name: postgres
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: baseline_test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - 5432

  - name: redis
    image: redis:7-alpine
    ports:
      - 6379

volumes:
  - name: docker-sock
    host:
      path: /var/run/docker.sock

---
kind: secret
name: slack_webhook
get:
  path: slack
  name: webhook
